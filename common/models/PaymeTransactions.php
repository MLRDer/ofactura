<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "payme_transactions".
 *
 * @property int $id
 * @property int $order_id
 * @property string $transaction_id
 * @property string $transaction_create_time
 * @property int $transaction_amount
 * @property string $transaction_account
 * @property string $reason
 * @property int $create_time
 * @property int|null $perform_time
 * @property int|null $cancel_time
 * @property int $state
 * @property int $tin
 * @property PaymeTransactionOrders $order
 */
class PaymeTransactions extends \yii\db\ActiveRecord
{

    const STATE_NEW = 1;
    const STATE_COMPLETED = 2;
    const STATE_CANCELED = -1;
    const STATE_CANCELED_AFTER_COMPLETE = -2;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'payme_transactions';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['order_id', 'transaction_id', 'transaction_create_time', 'transaction_amount', 'transaction_account', 'create_time', 'state', 'tin'], 'required'],
            [['order_id', 'transaction_amount', 'state', 'tin'], 'integer'],
            [['transaction_account','reason'], 'string'],
            [['transaction_id', 'transaction_create_time', 'create_time', 'perform_time', 'cancel_time'], 'string', 'max' => 100],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'order_id' => 'Order ID',
            'transaction_id' => 'Transaction ID',
            'transaction_create_time' => 'Transaction Create Time',
            'transaction_amount' => 'Transaction Amount',
            'transaction_account' => 'Transaction Account',
            'create_time' => 'Create Time',
            'perform_time' => 'Perform Time',
            'cancel_time' => 'Cancel Time',
            'reason' => 'Cancel Time',
            'state' => 'State',
            'tin' => 'Tin',
        ];
    }

    public function beforeValidate()
    {
        $this->create_time = (string)$this->create_time;
        $this->perform_time = (string)$this->perform_time;
        $this->cancel_time = (string)$this->cancel_time;
        $this->transaction_create_time = (string)$this->transaction_create_time;
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        $this->create_time = (int)$this->create_time;
        $this->perform_time = (int)$this->perform_time;
        $this->cancel_time = (int)$this->cancel_time;
        $this->transaction_create_time = (int)$this->transaction_create_time;
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function getOrder()
    {
        return $this->hasOne(PaymeTransactionOrders::class,['id'=>'order_id']);
    }
}
